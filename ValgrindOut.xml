<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/igor/projects/C_C++/matrix/bin/Debug/matrix </line>
</preamble>

<pid>10613</pid>
<ppid>4995</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/igor/projects/C_C++/matrix/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</exe>
    <arg></arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.407 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x401AD0</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Array&lt;float&gt;::setSize(int)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>array.h</file>
      <line>283</line>
    </frame>
    <frame>
      <ip>0x401917</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>372</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
  <auxwhat>Address 0x5aba9d0 is 16 bytes after a block of size 32 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E80F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x401894</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>369</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x401AEF</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Array&lt;float&gt;::operator[](int)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>array.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x401965</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>377</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
  <auxwhat>Address 0x5aba9d0 is 16 bytes after a block of size 32 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E80F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x401894</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>369</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x401B31</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Array&lt;float&gt;::operator[](int)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>array.h</file>
      <line>182</line>
    </frame>
    <frame>
      <ip>0x401965</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>377</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
  <auxwhat>Address 0x5aba9c8 is 8 bytes after a block of size 32 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E80F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x401894</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>369</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x401997</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>Matrix&lt;float&gt;::operator=(Matrix&lt;float&gt; const&amp;)</fn>
      <dir>/home/igor/projects/C_C++/matrix/include</dir>
      <file>matrix.h</file>
      <line>377</line>
    </frame>
    <frame>
      <ip>0x400F58</ip>
      <obj>/home/igor/projects/C_C++/matrix/bin/Debug/matrix</obj>
      <fn>main</fn>
      <dir>/home/igor/projects/C_C++/matrix</dir>
      <file>main.cpp</file>
      <line>84</line>
    </frame>
  </stack>
  <auxwhat>Address 0x0 is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:01.925 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x4</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x3</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

